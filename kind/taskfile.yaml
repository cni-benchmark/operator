version: "3"

set: [pipefail]

env:
  KUBECONFIG: kubeconfig.yaml
vars:
  clusterName: cni-benchmark
  clusterConfig: |-
    kind: Cluster
    apiVersion: kind.x-k8s.io/v1alpha4
    nodes:
    - role: control-plane
      extraPortMappings:
      # Grafana
      - containerPort: 80
        hostPort: 80
        listenAddress: "127.0.0.1"
      # PostgreSQL
      - containerPort: 5432
        hostPort: 5432
        listenAddress: "127.0.0.1"
tasks:
  default:
    cmds:
      - task: create

  create:
    desc: Create a KIND cluster
    cmds:
      - cmd: echo {{ b64enc .clusterConfig }} | base64 -d > kind-config
        silent: true
      - defer: rm -f kind-config
        silent: true
      - |-
        if ! kind get clusters | grep -qF {{ .clusterName }}; then
          kind create cluster --name {{ .clusterName }} --config kind-config
        fi
      - task: kubeconfig
        silent: true
      - chmod 0600 "${KUBECONFIG}"
      - kubectl config set-context --current --namespace=default

  deploy:
    desc: Deploy application
    cmds:
      - kubectl apply -k . --force --grace-period 0

  kubeconfig:
    desc: Export kubeconfig to ${KUBECONFIG}
    cmds:
      - kind export kubeconfig --name {{ .clusterName }} --kubeconfig "${KUBECONFIG}"

  load:
    desc: Load image into cluster
    cmds:
      - kind load docker-image {{ .image }} --name {{ .clusterName }}

  delete:
    desc: Delete the KIND cluster
    cmds:
      - kind delete cluster --name {{ .clusterName }}
      - rm -f "${KUBECONFIG}"

  clean:
    desc: Clean everything
    cmds:
      - task: delete
