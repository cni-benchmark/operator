version: "3"

vars:
  BIN_DIR: '{{ print .ROOT_DIR "/bin" }}'
  ENVTEST: '{{ print .BIN_DIR "/setup-envtest" }}'
  ENVTEST_K8S_VERSION: '1.32.*!'

set: [pipefail]

tasks:
  default:
    cmds:
      - task: test

  tests:
    desc: Run all tests
    cmds:
      - task: unit-tests
      - task: e2e-tests

  unit-tests:
    desc: Run Go unit tests
    cmds:
      - go test $(go list ./... | grep -vF e2e) -v -ginkgo.v

  e2e-tests:
    desc: Run Go end-to-end tests
    deps:
      - setup-envtest
    env:
      KUBEBUILDER_ASSETS:
        sh: '{{ .ENVTEST }} use {{ quote .ENVTEST_K8S_VERSION }} --bin-dir {{ .BIN_DIR }} -p path'
    cmds:
      - go test ./test/e2e -v -ginkgo.v

  setup-envtest:
    desc: Install envtest
    status:
      - test -f {{ quote .ENVTEST }}
    generates:
      - '{{ .ENVTEST }}'
    env:
      GOBIN: '{{ .BIN_DIR }}'
    cmds:
      - go install sigs.k8s.io/controller-runtime/tools/setup-envtest@latest

  cluster:
    desc: Deploy test cases to KIND cluster
    vars:
      image: ghcr.io/cni-benchmark/operator:latest
    cmds:
      - CGO_ENABLED=0 go build --ldflags='-s -w' -o dist/cni-benchmark-operator cmd/main.go
      - docker build -t {{ .image }} -f Dockerfile ./dist
      - task: kind:create
      - task: kind:load
        vars:
          image: "{{ .image }}"
      - task: kind:deploy

  clean:
    desc: Clean everything
    cmds:
      - task: kind:clean
      - rm -rvf '{{ .BIN_DIR }}'

includes:
  kind:
    taskfile: ./kind/taskfile.yaml
    dir: ./kind
