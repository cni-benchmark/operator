version: "3"

vars:
  binDir: '{{ print .ROOT_DIR "/bin" }}'
  envtestBin: '{{ print .binDir "/setup-envtest" }}'
  envtestK8sVersion:
    sh: curl -fsSL https://dl.k8s.io/release/stable.txt | awk -F. '{print $1"."$2".x!"}' | tr -d v
  image: ghcr.io/cni-benchmark/operator:latest

set: [pipefail]

tasks:
  default:
    cmds:
      - task: test

  tests:
    desc: Run all tests
    cmds:
      - task: unit-tests
      - task: e2e-tests

  unit-tests:
    desc: Run Go unit tests
    cmds:
      - go test $(go list ./... | grep -vF e2e) -v -ginkgo.v

  e2e-tests:
    desc: Run Go end-to-end tests
    deps:
      - setup-envtest
    vars:

    cmds:
      - |-
        export KUBEBUILDER_ASSETS="$({{ .envtestBin }} use {{ quote .envtestK8sVersion }} --bin-dir {{ .binDir }} -p path)"
        chmod -R 0755 {{ quote .binDir }}
        go test ./test/e2e -v -ginkgo.v
        
  setup-envtest:
    desc: Install envtest
    status:
      - test -f {{ quote .envtestBin }}
    generates:
      - '{{ .envtestBin }}'
    env:
      GOBIN: '{{ .binDir }}'
    cmds:
      - go install sigs.k8s.io/controller-runtime/tools/setup-envtest@latest

  build:
    desc: Build operator
    sources:
      - cmd/**/*
      - pkg/**/*
      - go.mod
      - go.sum
      - Dockerfile
    generates:
      - dist/cni-benchmark-operator
    status:
      - docker image ls {{ quote .image }} -q | grep -qE '.+'
    cmds:
      - CGO_ENABLED=0 go build --ldflags='-s -w' -o dist/cni-benchmark-operator cmd/main.go
      - docker build -t {{ quote .image }} -f Dockerfile ./dist

  cluster:
    desc: Deploy test cases to KIND cluster
    deps:
      - build
    cmds:
      - task: kind:create
      - task: kind:load
        vars:
          image: "{{ .image }}"
      - task: kind:deploy

  clean:
    desc: Clean everything
    cmds:
      - task: kind:clean
      - rm -rvf dist reports {{ quote .binDir }}
      - find . -type f -name '__debug_bin*' -print0 | xargs -0 rm -vf

includes:
  kind:
    taskfile: ./kind/taskfile.yaml
    dir: ./kind
